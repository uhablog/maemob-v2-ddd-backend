name: Run Tests
on:
  pull_request:
    branches:
      - main
jobs:
  testWebAPI:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17.0-alpine3.20
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Wait for PostgreSQL to be ready
      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -U user -p 5432; do
            echo "Waiting for postgres...";
            sleep 5;
          done

      # Run migrations or create tables (if necessary)
      - name: Create tables
        env:
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          psql -h localhost -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }} -f ./db/init.sql

      # Test Application
      - name: run test
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_USER: ${{ secrets.POSTGRES_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DB_NAME: ${{ secrets.POSTGRES_DB }}
          DB_PORT: 5432
        run: |
          npm run test